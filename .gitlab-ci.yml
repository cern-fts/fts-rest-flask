image: gitlab-registry.cern.ch/fts/fts-rest-flask:ci

stages:
  - static_code_analysis
  - tests
  - build
  - publish

variables:
  MYSQL_DATABASE: ftsflask
  MYSQL_ROOT_PASSWORD: asdf
  PYTHONPATH: ./src:./src/fts3rest
  FTS3TESTCONFIG: ./src/fts3rest/fts3rest/tests/fts3testconfig_ci

#--------------------------
# Static Code Analysis
#--------------------------

black:
  # Check that every file has been formatted with black
  stage: static_code_analysis
  script:
    - black --version
    - black --check --fast --target-version py36 src/

pylint36:
  # Check that every file doesn't have syntax errors
  stage: static_code_analysis
  script:
    - pylint --version
    - pylint --output-format colorized --disable C,R,W src/ --ignored-modules=sqlalchemy

pylint37:
  stage: static_code_analysis
  script:
    - source ~/.bashrc
    - pyenv global $PY37
    - source $VENV_37/bin/activate
    - pylint --version
    - pylint --output-format colorized --disable C,R,W src/ --ignored-modules=sqlalchemy

pylint38:
  stage: static_code_analysis
  script:
    - source ~/.bashrc
    - pyenv global $PY38
    - source $VENV_38/bin/activate
    - pylint --version
    - pylint --output-format colorized --disable C,R,W src/ --ignored-modules=sqlalchemy

radon:
  # Check metrics for every file
  stage: static_code_analysis
  script:
    - radon --version
    - source .gitlab-ci/radon.sh

bandit:
  # Find potential security issues in file.
  # It's allowed to fail as it may detect false positives.
  allow_failure: true
  stage: static_code_analysis
  script:
    - bandit --version
    - bandit --ini .gitlab-ci/bandit.ini

#--------------------------
# Testing jobs
#--------------------------

functional_tests36:
  stage: tests
  services:
    - name: centos/mariadb:latest
      alias: mariadb
  script:
    - source ~/.bashrc
    - pyenv global $PY36
    - python --version
    - source $VENV_36/bin/activate
    - ./.gitlab-ci/setup-db.sh
    - coverage run --branch --source src/fts3rest/fts3rest/ --omit 'src/fts3rest/fts3rest/tests/*' -m pytest src/ -x
    - coverage report
  needs: []

functional_tests37:
  stage: tests
  services:
    - name: centos/mariadb:latest
      alias: mariadb
  script:
    - source ~/.bashrc
    - pyenv global $PY37
    - python --version
    - source $VENV_37/bin/activate
    - ./.gitlab-ci/setup-db.sh
    - coverage run --branch --source src/fts3rest/fts3rest/ --omit 'src/fts3rest/fts3rest/tests/*' -m pytest src/ -x
    - coverage report
  needs: []

functional_tests38:
  stage: tests
  services:
    - name: centos/mariadb:latest
      alias: mariadb
  script:
    - source ~/.bashrc
    - pyenv global $PY38
    - python --version
    - source $VENV_38/bin/activate
    - ./.gitlab-ci/setup-db.sh
    - coverage run --branch --source src/fts3rest/fts3rest/ --omit 'src/fts3rest/fts3rest/tests/*' -m pytest src/ -x
    - coverage report
  needs: []

#--------------------------
# Build jobs
#--------------------------

client_wheel_sdist:
  stage: build
  script:
    - python3 setup.py bdist_wheel
    - python3 setup.py sdist
  artifacts:
    when: on_success
    untracked: true

client_rpm:
  stage: build
  script:
    - rpmdev-setuptree
    - ./packaging/fts-rest-client.sh
    - mkdir ${CI_PROJECT_DIR}/artifacts/
    - mv -v ~/rpmbuild/RPMS/noarch/* ${CI_PROJECT_DIR}/artifacts/
    - mv -v ~/rpmbuild/SRPMS/* ${CI_PROJECT_DIR}/artifacts/
  variables:
    BRANCH: ${CI_COMMIT_REF_NAME}
  artifacts:
    when: on_success
    untracked: true

server_rpm:
  stage: build
  script:
    - rpmdev-setuptree
    - ./packaging/fts-rest-server.sh
    - mkdir ${CI_PROJECT_DIR}/artifacts/
    - mv -v ~/rpmbuild/RPMS/noarch/* ${CI_PROJECT_DIR}/artifacts/
    - mv -v ~/rpmbuild/SRPMS/* ${CI_PROJECT_DIR}/artifacts/
  variables:
    BRANCH: ${CI_COMMIT_REF_NAME}
  artifacts:
    when: on_success
    untracked: true

#--------------------------
# Publish templates
#--------------------------

.publish-template: &publish-template_definition
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  dependencies:
    - client_rpm
    - server_rpm
  script:
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$repo_passwd" | kinit "$repo_user"
    - eosfusebind
    - packaging/fts-repo-manager.py --action add --base /eos/workspace/f/fts/repo/www/repos/ --arch-dir x86_64 --ref ${CI_COMMIT_REF_NAME} --packages artifacts/*.rpm
    - sleep 60
  tags:
    - docker-privileged
  retry: 2

#--------------------------
# Publish jobs
#--------------------------

rpms:
  <<: *publish-template_definition
  rules:
    - if: '$CI_PROJECT_NAMESPACE != "fts"'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_TAG != null'
    - if: '$CI_COMMIT_REF_NAME != "develop" && $CI_COMMIT_TAG == null'
      when: manual

publish-production:
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  script:
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$repo_passwd" | kinit "$repo_user"
    - eosfusebind
    - packaging/syncrepo --base-origin /eos/workspace/f/fts/repo/www/repos/rc --base-dest /eos/workspace/f/fts/repo/www/repos/ '*.rpm'
    - sleep 60
  tags:
    - docker-privileged
  retry: 2
  rules:
    - if: $CI_COMMIT_TAG != null
      when: manual
